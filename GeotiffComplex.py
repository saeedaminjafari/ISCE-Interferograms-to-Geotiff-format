#ISCE complex outputs to Geotiff - Pahse and Amplitude of Interferograms
#Written By Saeid Aminjafari & Mohammadnia
#Email: saeed.aminjafari@natgeo.su.se
#
#This code extracts the phase of an interferogram generated by ISCE software and saves the result as a Geotiff image
#To run the code in terminal, change the desired fields based on comments and type: >>python3 GeotiffComplex.py
#Your result will be stored in current directory.

from shutil import copyfile
from osgeo import gdal            ## GDAL support for reading virtual files
import os                         ## To create and remove directories
import matplotlib.pyplot as plt   ## For plotting
import numpy as np                ## Matrix calculations
import glob
import gdal
from gdalconst import *
from osgeo import osr

def array_to_raster(array):

    dst_filename = InputName + '_ph.tiff'       #phase output name
    #dst_filename = InputName + '_amp.tiff'     #amplitude output name

    driver = gdal.GetDriverByName('GTiff')

    dataset = driver.Create(
        dst_filename,
        x_pixels,
        y_pixels,
        1,
        gdal.GDT_Float32, )

    dataset.SetGeoTransform((
        x_min,
        PIXEL_SIZE,
        0,
        y_max,
        0,
        -PIXEL_SIZE))  

    dataset.SetProjection(prj_wkt)
    dataset.GetRasterBand(1).WriteArray(array)
    dataset.FlushCache()  # Write to disk.
    return dataset, dataset.GetRasterBand(1)  #If you need to return, remenber to return  also the dataset because the band don`t live without dataset. 

InputName = 'filt_topophase.flat.geo'                   #Change the file name
ds = gdal.Open(InputName, gdal.GA_ReadOnly)            #Open your file
x_pixels = ds.RasterXSize                              #number of pixels in x direction
y_pixels = ds.RasterYSize                              #number of pixels in y direction
PIXEL_SIZE = ds.GetGeoTransform()[1]                   #Pixel size
x_min = ds.GetGeoTransform()[0]                        #Upper left corner (X)
y_max = ds.GetGeoTransform()[3]                        #Upper left corner (y)
prj_wkt = ds.GetProjectionRef()                        #Projection
slc = ds.GetRasterBand(1).ReadAsArray()
phase = np.angle(slc)                                  #Extraction of phase
amp = np.abs(slc)                                      #Extraction of Amplitude
array_to_raster(phase)                                 #Saving phase to Geotiff
#array_to_raster(amp)                                  #Saving amplitude to Geotiff if needed
